/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.CaliperConttroler;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import tools.Combos;
import model.Caliper;
import tools.CaixaDeDialogo;

/**
 *
 * @author caue.seidel
 */
public class CaliperView extends javax.swing.JFrame {

    /**
     * Creates new form CaliperView
     */
    Caliper objCaliper;
    Combos jcb_periodo;
    CaliperConttroler caliperCon;
    public CaliperView() {
        initComponents();
        preencheComboPeriodo();
        preencheComboCdPorca();
    }
    private void preencheComboCdPorca(){
        try{
        jcb_periodo = new Combos(jCb_codigo_porca_Caliper);
        jcb_periodo.PreencheCombo("select codigo, brinco from cadastro_porca");
        }catch(SQLException e){
            System.out.println("erro" +e);
        }        
    }
    
    public void preencheComboPeriodo(){
        try{
        jcb_periodo = new Combos(jCB_periodo_caliper);
        jcb_periodo.PreencheCombo("select id_situacao, periodo from situacao");
        }catch(SQLException e){
            System.out.println(""+e);
        }
    }
    
   
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        BTN_Salvar_Caliper = new javax.swing.JButton();
        dt_caliper = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        jCB_periodo_caliper = new javax.swing.JComboBox<>();
        jcb_situacao_caliper = new javax.swing.JComboBox<>();
        jCb_codigo_porca_Caliper = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel1.setText("Caliper");

        jLabel4.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel4.setText("Situação");

        jLabel5.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel5.setText("Codigo");

        jLabel6.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel6.setText("Infome o Periodo");

        BTN_Salvar_Caliper.setFont(new java.awt.Font("Arial Black", 3, 18)); // NOI18N
        BTN_Salvar_Caliper.setText("Salvar");
        BTN_Salvar_Caliper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_Salvar_CaliperActionPerformed(evt);
            }
        });

        try {
            dt_caliper.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel2.setText("Data");

        jCB_periodo_caliper.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jCB_periodo_caliper.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCB_periodo_caliperItemStateChanged(evt);
            }
        });

        jcb_situacao_caliper.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jCb_codigo_porca_Caliper.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(305, 305, 305)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(104, 104, 104)
                                .addComponent(jLabel2))
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCB_periodo_caliper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcb_situacao_caliper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCb_codigo_porca_Caliper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(200, 200, 200)
                                .addComponent(dt_caliper, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(BTN_Salvar_Caliper, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dt_caliper, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCb_codigo_porca_Caliper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCB_periodo_caliper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jcb_situacao_caliper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(BTN_Salvar_Caliper, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //botao de salvar caliper
    private void BTN_Salvar_CaliperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_Salvar_CaliperActionPerformed
        boolean validar = validarDados();
        if(validar){
            objCaliper = new Caliper();
            
            objCaliper = gurdarDados();
            
            caliperCon = new CaliperConttroler();
            
            if(caliperCon.inserir(objCaliper)){
                CaixaDeDialogo.obterinstancia().exibirMensagem("Adicionado com sucesso");
                limparTela();
            }else{
              CaixaDeDialogo.obterinstancia().exibirMensagem("Adicionado com sucesso");
            }
            
        }
        
        
    }//GEN-LAST:event_BTN_Salvar_CaliperActionPerformed
    private void limparTela(){
        dt_caliper.setText("");
        jCB_periodo_caliper.setSelectedIndex(0);
        jCb_codigo_porca_Caliper.setSelectedIndex(0);
        jcb_situacao_caliper.setSelectedIndex(0);
        
    }
    private boolean validarDados(){
        
        if(dt_caliper.equals("")){
            CaixaDeDialogo.obterinstancia().exibirMensagem("Data caliper esta nulla");
            return false;
        }
        
        
         Combos c3 = (Combos) jCb_codigo_porca_Caliper.getSelectedItem();
        int codigo = Integer.parseInt(c3.getCodigo());
        
        Combos c = (Combos) jCB_periodo_caliper.getSelectedItem();
        int periodo = Integer.parseInt(c.getCodigo());
        
        Combos c2 = (Combos) jcb_situacao_caliper.getSelectedItem();
        int situacao = Integer.parseInt(c.getCodigo());
        
        
        if(codigo <= 0){
            CaixaDeDialogo.obterinstancia().exibirMensagem("Codigo da porca esta nulla");
            return false;
        }
        
        if( periodo <=0 ){
            
            CaixaDeDialogo.obterinstancia().exibirMensagem("periodo esta nullo");
            return false;

        }
        if(situacao <= 0){
            CaixaDeDialogo.obterinstancia().exibirMensagem("situacao esta nullo");
            return false;
        }
        
        
        return true;
        
        
    }
    
    private Caliper gurdarDados(){
        try{
        objCaliper = new Caliper();
        
        
        
        Date dataFormatada = new SimpleDateFormat("dd/MM/yyyy").parse(dt_caliper.getText());
        String dataCerta = new SimpleDateFormat("yyyy-MM-dd").format(dataFormatada);
        
        Combos c = (Combos) jcb_situacao_caliper.getSelectedItem();
        
        Combos c2 = (Combos) jCb_codigo_porca_Caliper.getSelectedItem();
       
            System.out.println("c"+c.getCodigo());
            System.out.println("c2"+c2.getCodigo());
        
        objCaliper.setCd_porca(Integer.parseInt(c2.getCodigo()));
        objCaliper.setDataMarcao(dataCerta);
        objCaliper.setSituacao(Integer.parseInt(c.getCodigo()));
        
        return objCaliper;
        }catch(Exception e){
            System.out.println("erro guardar dados caliper tela calipreView"+e );
            return null;
        }
        
    }
    
    private void atualizarCombo(int sit){
        try{
            String sql = "select id_situacao, situacao from situacao where id_situacao ="+sit;
            
            jcb_periodo = new Combos(jcb_situacao_caliper);
            jcb_periodo.PreencheCombo(sql);
            
            
            
        }catch(SQLException e){
            System.out.println("erro "+e);
        }
        
    }
//quando o periodo e selecionado
    private void jCB_periodo_caliperItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCB_periodo_caliperItemStateChanged
        try{
            if(jCB_periodo_caliper.getSelectedIndex() > 0){
                Combos c = (Combos) jCB_periodo_caliper.getSelectedItem();
                int selecionado = Integer.parseInt(c.getCodigo());
                
                atualizarCombo(selecionado);
                
                
            }
            
            
            
        }catch(Exception e){
            
        }
        
        
    }//GEN-LAST:event_jCB_periodo_caliperItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Caliper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Caliper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Caliper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Caliper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CaliperView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTN_Salvar_Caliper;
    private javax.swing.JFormattedTextField dt_caliper;
    private javax.swing.JComboBox<String> jCB_periodo_caliper;
    private javax.swing.JComboBox<String> jCb_codigo_porca_Caliper;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JComboBox<String> jcb_situacao_caliper;
    // End of variables declaration//GEN-END:variables
}
